{"version":3,"sources":["components/CategoryAdd.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","console","log","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,kBAAC,WAAD,KACI,0BAAMC,SAZO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC3CN,EAAc,OAQV,2BACIO,KAAK,OACLC,MAAOT,EACPU,SApBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,uBCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIhC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCLHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAa,IAAD,EACfd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAH6B,mBAClCC,EADkC,KAC3BC,EAD2B,KA4BzC,OAtBAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFC,QAAQC,IAAIF,GACRH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAM1B,CAACpB,IASIqB,EDvB2BO,CAAa5B,GAA/Ba,EAHuB,EAG5BN,KAAYa,EAHgB,EAGhBA,QAWnB,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GACjDoB,GAAW,uBAAGJ,UAAU,oCAAb,WACb,yBAAKA,UAAU,aAGPH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACImB,IAAKnB,EAAIC,IACLD,UEQjBoB,EAjCM,WAAK,MAGc5C,mBAAS,CAAC,gBAHxB,mBAGfQ,EAHe,KAGHT,EAHG,KAatB,OACI,kBAAC,WAAD,KACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQS,EAAWe,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI6B,IAAK7B,EACLA,SAAUA,UCrBtC+B,IAASC,OAEP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6c96aafa.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const CategoryAdd = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log('Submit hecho');\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(categories => [inputValue,...categories]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={ handleInputChange }\r\n                />\r\n            </form>\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nCategoryAdd.propTypes = {\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","\r\n\r\nexport const getGifs = async(category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=uv9pFE4ZxFz7T9dO0INPx7g8HBTcYRaw&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    \r\n    //console.log(id,title,url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React /*{ useState, useEffect, Fragment }*/ from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n//import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    // const [images,setImages] = useState([]);\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    \r\n\r\n    // useEffect( ()=>{\r\n    //     getGifs( category)\r\n    //         .then(imgs => setImages(imgs))\r\n    // },[category]);\r\n\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem\r\n                            key={img.id} \r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n        \r\n        )\r\n    \r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) =>{\r\nconst [state, setState] = useState({\r\n    data:[],\r\n    loading:true\r\n});\r\n\r\nuseEffect(()=>{\r\n    getGifs(category)\r\n        .then(imgs => {\r\n            \r\n            console.log(imgs);\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n            }); \r\n            \r\n            \r\n            \r\n        })\r\n},[category])\r\n\r\n// setTimeout(() => {\r\n//     setState({\r\n//         data:[1,2,3,4,5,6,7],\r\n//         loading:false\r\n//     })\r\n// }, 3000);\r\n\r\nreturn state;\r\n}","import React,{ Fragment,useState } from 'react';\r\nimport { CategoryAdd } from './components/CategoryAdd';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    //const categories = ['One Punch','Samurai X','Dragon Ball'];\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    // const handleAdd = () => {\r\n    //     //setCategories([...categories,'Yugi-Oh']);\r\n    //     setCategories(categories => [...categories,'Yugi-Oh']);\r\n    // }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>GifExpertApp</h2>\r\n            <CategoryAdd setCategories={setCategories}/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\n\nReactDOM.render(\n  \n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}